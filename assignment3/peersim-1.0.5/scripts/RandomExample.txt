# This script builds a randomly connected graph and prints in-degree
# distribution, path length and clustering coefficient information.
# Basically it produces the data used as baseline.

SIZE 100

CYCLE 100
CYCLES 1

random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE


protocol.gossip IdleProtocol
{
}

#init.wire WireKOut
#{
#	protocol gossip
#	k 5
#}

init.wire WireRingLattice
{
	protocol gossip
	k 50
}

control.degree p2p.reports.InDegreeObserver
{
	protocol gossip

	step CYCLE
	starttime 299000
	endtime 300000
}

control.nc p2p.reports.ClusteringCoefficient
{
	protocol gossip

	step CYCLE
}

control.graphPL GraphStats
{
	protocol gossip
	step CYCLE
	undir true
	nl 10
	nc 1000
}
